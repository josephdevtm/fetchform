{"version":3,"sources":["../src/Errors.js","../src/edit/FetchForm.js"],"names":["FetchFormError","Error","message","status","super","this","name","FetchForm","form","options","includeDisabled","includeEmpty","includeHidden","data","getData","submit","bind","const","elements","i","length","let","element","val","disabled","type","callback","onsubmit","tagName","valSelect","valInput","valTextarea","values","option","selected","push","value","checked","valRadio","radios","querySelectorAll","radio"],"mappings":"0OAAA,IAAMA,EAAc,SAAAC,GAClB,SAAAD,EAAYE,EAASC,GACnBC,EAAAA,KAAKC,KAACH,GACNG,KAAKF,OAASA,EACdE,KAAKC,KAAO,iHAJI,CAASL,OCERM,EAqBnB,SAAYC,EAAMC,kBAAU,CAC1BC,iBAAiB,EACjBC,cAAc,EACdC,eAAe,IAEfP,KAAKG,KAAOA,EACZH,KAAKI,QAAUA,EACfJ,KAAKQ,KAAOR,KAAKS,UACjBT,KAAKU,OAASV,KAAKU,OAAOC,KAAKX,0BAwBjCS,QAAA,WAME,IALAG,IAAMJ,EAAO,GACPL,EAAOH,KAAKG,KACZC,EAAUJ,KAAKI,QACfS,EAAWV,EAAKU,SAEbC,EAAI,EAAGA,EAAID,EAASE,OAAQD,IAAK,CACxCE,IAAIC,EAAUJ,EAASC,GAEvBN,EAAKS,EAAQhB,MAAQD,KAAKkB,IAAID,IAED,IAAzBb,EAAQE,cAAiD,KAAvBE,EAAKS,EAAQhB,cAC1CO,EAAKS,EAAQhB,OAGU,IAA5BG,EAAQC,iBAA6BY,EAAQE,iBACxCX,EAAKS,EAAQhB,OAGQ,IAA1BG,EAAQG,eAA4C,WAAjBU,EAAQG,aACtCZ,EAAKS,EAAQhB,MAIxB,OAAOO,eAmBTE,OAAA,SAAOW,GACQrB,KAAKG,KAEbmB,SAAWD,eAmBlBH,IAAA,SAAID,GACF,GAAwB,WAApBA,EAAQM,QACV,OAAOvB,KAAKwB,UAAUP,GACjB,GAAwB,UAApBA,EAAQM,QACjB,OAAOvB,KAAKyB,SAASR,GAChB,GAAwB,aAApBA,EAAQM,QACjB,OAAOvB,KAAK0B,YAAYT,GAExB,MAAM,IAAItB,EAAc,yBAA0BsB,EAAQ,sBAmB9DO,UAAA,SAAUP,GAIR,IAHAL,IAAMR,EAAUa,EAAQb,QAClBuB,EAAS,GAENb,EAAI,EAAGA,EAAIV,EAAQW,OAAQD,IAAK,CACvCE,IAAIY,EAASxB,EAAQU,GAEjBc,EAAOC,UACTF,EAAOG,KAAKF,EAAOG,OAIvB,OAAOJ,eAkBTF,SAAA,SAASR,GACP,MAAqB,aAAjBA,EAAQG,KACHH,EAAQe,QACW,UAAjBf,EAAQG,KACVpB,KAAKiC,SAAShB,GAEdA,EAAQc,mBAoBnBE,SAAA,SAAShB,GAGP,IAFAL,IAAMX,EAAOgB,EAAQhB,KACfiC,EAASlC,KAAKG,KAAKgC,iBAAgB,eAAgBlC,EAAI,MACpDa,EAAI,EAAGA,EAAIoB,EAAOnB,OAAQD,IAAK,CACtCF,IAAMwB,EAAQF,EAAOpB,GACrB,GAAIsB,EAAMJ,QACR,OAAOI,EAAML,MAGjB,OAAO,kBAkBTL,YAAA,SAAYT,GACV,OAAOA,EAAQc","sourcesContent":["class FetchFormError extends Error {\r\n  constructor(message, status) {\r\n    super(message);\r\n    this.status = status;\r\n    this.name = 'FetchFormError';\r\n  }\r\n}\r\n\r\nexport { FetchFormError };","import { FetchFormError } from \"../Errors\"\r\n\r\nexport default class FetchForm {\r\n  /**\r\n   * Fetch form data\r\n   * @param {Object} form\r\n   * @param {Object} options\r\n   * @return {Object} Form data\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * // options is optional\r\n   * const options = {\r\n   *   includeEmpty: false,\r\n   *   includeDisabled: false,\r\n   *   includeHidden: false\r\n   * }\r\n   * const fetchForm = new FetchForm(form, options)\r\n   * const data = fetchForm.getData()\r\n   * console.log(data)\r\n   * // { username: 'John Doe' }\r\n   */\r\n  constructor(form, options = {\r\n    includeDisabled: false,\r\n    includeEmpty: true,\r\n    includeHidden: true\r\n  }) {\r\n    this.form = form\r\n    this.options = options\r\n    this.data = this.getData()\r\n    this.submit = this.submit.bind(this)\r\n  }\r\n\r\n  /**\r\n   * Get form data\r\n   * @return {Object} Form data\r\n   * @throws {FetchFormError}\r\n   * @private\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @method getData\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * const fetchForm = new FetchForm(form)\r\n   * const data = fetchForm.getData()\r\n   * console.log(data)\r\n   * // {\r\n   * //   \"name\": \"John Doe\",\r\n   * //   \"email\": \"johndoe@example.com\",\r\n   * //   \"website\": \"http://example.com\",\r\n   * //   \"age\": \"25\"\r\n   * // }\r\n   */\r\n\r\n  getData() {\r\n    const data = {}\r\n    const form = this.form\r\n    const options = this.options\r\n    const elements = form.elements\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n      let element = elements[i]\r\n\r\n      data[element.name] = this.val(element)\r\n\r\n      if (options.includeEmpty === false && data[element.name] === '') {\r\n        delete data[element.name]\r\n      }\r\n\r\n      if (options.includeDisabled === false && element.disabled) {\r\n        delete data[element.name]\r\n      }\r\n\r\n      if (options.includeHidden === false && element.type === 'hidden') {\r\n        delete data[element.name]\r\n      }\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * listener on submit form\r\n   * @param {Object} element\r\n   * @return {String} Value\r\n   * @private\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @method submit\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * const fetchForm = new FetchForm(form)\r\n   * fetchForm.submit((event) => {\r\n   *  event.preventDefault()\r\n   *  const data = fetchform.getData()\r\n   * })\r\n   */\r\n  submit(callback) {\r\n    const form = this.form\r\n\r\n    form.onsubmit = callback\r\n  }\r\n\r\n  /**\r\n   * Get value of element\r\n   * @param {Object} element\r\n   * @return {String} Value\r\n   * @private\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @method val\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * const input = form.elements.username\r\n   * const fetchForm = new FetchForm(form)\r\n   * const value = fetchForm.val(input)\r\n   * console.log(value)\r\n   * // \"John Doe\"\r\n   */\r\n  val(element) {\r\n    if (element.tagName === 'SELECT') {\r\n      return this.valSelect(element)\r\n    } else if (element.tagName === 'INPUT') {\r\n      return this.valInput(element)\r\n    } else if (element.tagName === 'TEXTAREA') {\r\n      return this.valTextarea(element)\r\n    } else {\r\n      throw new FetchFormError(`Unknown element type: ${element.tagName}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get value of select element\r\n   * @param {Object} element\r\n   * @return {String} Value\r\n   * @private\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @method valSelect\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * const fetchForm = new FetchForm(form)\r\n   * const value = fetchForm.valSelect(element)\r\n   * console.log(value)\r\n   * // [\"John Doe\"]\r\n   */\r\n  valSelect(element) {\r\n    const options = element.options\r\n    const values = []\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n      let option = options[i]\r\n\r\n      if (option.selected) {\r\n        values.push(option.value)\r\n      }\r\n    }\r\n\r\n    return values\r\n  }\r\n\r\n  /**\r\n   * Get value of input element\r\n   * @param {Object} element\r\n   * @return {String} Value\r\n   * @private\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @method valInput\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * const fetchForm = new FetchForm(form)\r\n   * const value = fetchForm.valInput(element)\r\n   * console.log(value)\r\n   * // \"John Doe\"\r\n   */\r\n  valInput(element) {\r\n    if (element.type === 'checkbox') {\r\n      return element.checked\r\n    } else if (element.type === 'radio') {\r\n      return this.valRadio(element)\r\n    } else {\r\n      return element.value\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get value of radio element\r\n   * @param {Object} element\r\n   * @return {String} Value\r\n   * @private\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @method valRadio\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * const gender = form.elements.gender;\r\n   * const fetchForm = new FetchForm(form)\r\n   * const value = fetchForm.valRadio(gender)\r\n   * console.log(value)\r\n   * // \"male\"\r\n   */\r\n  valRadio(element) {\r\n    const name = element.name\r\n    const radios = this.form.querySelectorAll(`input[name=\"${name}\"]`)\r\n    for (let i = 0; i < radios.length; i++) {\r\n      const radio = radios[i]\r\n      if (radio.checked) {\r\n        return radio.value\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Get value of textarea element\r\n   * @param {Object} element\r\n   * @return {String} Value\r\n   * @private\r\n   * @memberof FetchForm\r\n   * @instance\r\n   * @method valTextarea\r\n   * @example\r\n   * const form = document.querySelector('form')\r\n   * const fetchForm = new FetchForm(form)\r\n   * const value = fetchForm.valRadio(element)\r\n   * console.log(value)\r\n   * // \"Hello world\"\r\n   */\r\n  valTextarea(element) {\r\n    return element.value\r\n  }\r\n}"]}